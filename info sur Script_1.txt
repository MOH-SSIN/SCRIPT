***** une explication de cette Script **********


--------> #!/bin/bash
EXPLICATION 
symbole #!
    * Le symbole #! (appelé "shebang") indique au système d'exploitation que le fichier est un script.
    * et ki gol chno homa les programme li 5ase utliser bach exicute hde script
symbole #!
    * /bin/bash est le chemin absolu du programme bash, qui est un interpréteur de commandes (shell).
    * Cela signifie que toutes les commandes dans ce script seront interprétées par le programme bash



-------> # ARCH 
COMMANDE : arch=$(uname -a)
EXPLICATION 
uname : donne simplement le nom du système d'exploitation ou du noyau sur lequel tourne ton système.
-a  : ffiche toutes les informations disponibles sur le système d'exploitation et le noyau


-------># CPU PHYSICAL
COMMANDE  : cpuf=$(grep "physical id" /proc/cpuinfo | sort -u | wc -l)
EXPLICATION
/proc/cpuinfo : Ce fichier contient des informations détaillées sur le ou les processeurs de la machine.
physical id : représente un identifiant unique pour chaque processeur physique.
sort : katratabe les ligne btartibe alfabitique 
-u : (unique) katratebe et Élimine les doublons
wc -l : Compte le nombre de lignes dans la sortie précédente


-------># CPU VIRTUAL
COMMANDE : cpuv=$(grep "processor" /proc/cpuinfo | wc -l)
EXPLICATION
/proc/cpuinfo : Ce fichier contient des informations détaillées sur le ou les processeurs de la machine.
processor : La ligne processor dans le fichier /proc/cpuinfo fait effectivement référence à chaque cœur logique,
wc -l : Compte le nombre de lignes dans la sortie précédente



---------> # RAM
COMMANDE : 
1) ram_total=$(free --mega | awk '$1 == "Mem:" {print $2}')
2) ram_use=$(free --mega | awk '$1 == "Mem:" {print $3}')
3) ram_percent=$(free --mega | awk '$1 == "Mem:" {printf("%.2f"), $3/$2*100}') 
EXPLICATION : 
1)ram_total=$(free --mega | awk '$1 == "Mem:" {print $2}')
But    : La commande affiche uniquement la quantité totale de RAM du système en mégaoctets (Mo),
free   : Cette commande affiche des informations sur l'utilisation de la mémoire de ton système
--mega : Cette option de free permet d'afficher les valeurs de la mémoire en mégaoctets (MB).
Mem   :fait référence à la mémoire RAM physique de ton système.
swap  :est de l'espace disque utilisé comme une extension de la mémoire RAM.
2) ram_use=$(free --mega | awk '$1 == "Mem:" {print $3}')
But : Cette commande affiche la quantité de mémoire libre dans le système, exprimée en mégaoctets (Mo)
awk est un langage de traitement de texte. Il est utilisé ici pour filtrer et manipuler les lignes de texte ligne par ligne.
3) ram_percent=$(free --mega | awk '$1 == "Mem:" {printf("%.2f"), $3/$2*100}') 
But : Cette commande calcule le pourcentage de mémoire libre en utilisant la mémoire libre et la mémoire totale,


----------# DISK
COMMANDE :
1) disk_total=$(df -m | grep "/dev/" | grep -v "/boot" | awk '{disk_t += $2} END {printf ("%.1fGb\n"), disk_t/1024}')
2) disk_use=$(df -m | grep "/dev/" | grep -v "/boot" | awk '{disk_u += $3} END {print disk_u}')
3) disk_percent=$(df -m | grep "/dev/" | grep -v "/boot" | awk '{disk_u += $3} {disk_t+= $2} END {printf("%d"), disk_u/disk_t*100}')
EXPLICATION

1) disk_total=$(df -m | grep "/dev/" | grep -v "/boot" | awk '{disk_t += $2} END {printf ("%.1fGb\n"), disk_t/1024}')
BUT :  calculer l'espace disque total (en Go) utilisé par toutes les partitions de type /dev/, kan7ydo la partition /boot
df -m : kt2afici lina les inf sur disk et poion -m en mégaoctets (Mo)
grep "/dev/" :  Sélectionner uniquement les partitions physiques (disques) liées à /dev/
grep -v "/boot" : Exclure la partition /boot
awk : dwre dyalha hna howa katb9a additionner l'espace total de chaque partition sélectionnée

2) disk_use=$(df -m | grep "/dev/" | grep -v "/boot" | awk '{disk_u += $3} END {print disk_u}')
BUT : La commande calcule l'espace total UTLISÉ (en Mo) par toutes les partitions physiques (de type /dev/), en excluant la partition /boot

3) disk_percent=$(df -m | grep "/dev/" | grep -v "/boot" | awk '{disk_u += $3} {disk_t+= $2} END {printf("%d"), disk_u/disk_t*100}')
BUT :  calculer le pourcentage de l'espace disque utilisé pour toutes les partitions de type /dev/, en excluant la partition /boot
## une info important ##
/boot est souvent ignoré lors des calculs d'utilisation de l'espace disque, car il contient des fichiers système essentiels au démarrage,



---------> # CPU LOAD (pourcentage d'utilisation du CPU )
COMMANDE :
1) cpul=$(vmstat 1 2 | tail -1 | awk '{printf $15}')
2) cpu_op=$(expr 100 - $cpul)
3) cpu_fin=$(printf "%.1f" $cpu_op)
EXPLICATION
1) cpul=$(vmstat 1 2 | tail -1 | awk '{printf $15}')
BUT : cette commande te permet de connaitre le procentage de  cpru utlise sur ton system Linux
vmstat 1 2 afficher les statistique system tout les 1 seconde  2 fois comme l'utilisation du cpu , de la mémoire
tail -1 : prend uniquement le dernier ligne produit par vmstat
awk '{print $15}' : selectioner le 15 eme colone dans ce cas represente le % de cpu inactif(غير نشط)
2) cpu_op=$(expr 100 - $cpul)
BUT : pour calculer le pourcentage d'itilstion 
si le colone 15 montre le pourcentage de cpu inactif , pour obtenur k=le pourcentage d'utilisation ona fait
100 - $15
3) cpu_fin=$(printf "%.1f" $cpu_op)
BUt : afficher le resulta (qui représente le pourcentage de CPU utilisé)



--------> # LAST BOOT (le dernier redemarage du système)
COMMANDE : lb=$(who -b | awk '$1 == "system" {print $3 " " $4}')
EXPLICATION
who : commade pour affiche info sur l'utilisateure cennectes avec des info comme(Nom, terminal, date, ..)
who -b : afficher les info de dernier demarage du système
awk : role dyalha hna filtre les ligne contenant le "system"
$1 == "system" : verfier si le contenu de la premiere colone est le system , alors la comande 
traiter cette ligne 
{print $3 " " $4} : afficher colone 3 et 4 <=> date et l'eure de demarage


--------> # verfication de l'activation de LVM
COMMAND : lvmu=$(if [ $(lsblk | grep "lvm" | wc -l) -gt 0 ]; then echo yes; else echo no; fi)
EXPLICATION:
lsblk : afficher la structure des disques et partion dans le system 
grep "lvm" : filtrer uniquement les lignes contenant le Mot "lvm"
wc - l : compte le nr des igne dans la sortie precedente
-gt : operateur de compirateure en she , signifie superieru à 0
0 : verfier si le nbr de partion LVm est > 0
si condition vrai afficher yes , sinon afficher no
fi : c'est le fin de (if)


--------> # CONNEXIONS TCP
COMMANDE : tcpc=$(ss -ta | grep ESTAB | wc -l)
EXPLICATION :
ss : outils pour afficher des info sur les Connexions  overts sur le système, permet de voir les Connexions tcp, udp et d'autre type
option:
-t : filtre le Connexions tcp
-a :montre tout els connexion y compris li en ecoute(LISTEN) et celle( التي) etablier(ESTABLISHED)
[
    une info c'est quoi LISTEN et ESTABLISHED
    quant deux machine parler sur internet, ils utlisent tcp pour seconnecter , fhade communication 
    ils passent par diffirent etat:
    1) LISTEN : l'ordinateure attend une connexion (exmple une serveure ecoute sur un port com 8080)
    1) ESTABLISHED : les deux machine sont connecter etparlent ya3ni la connextion etablire entre les deux 
]
grep ESTAB : filtre les filne contient ESTAB pourquoi!! -> ESTAB est l'etat"ESTABLISHED" qui senifier
que la connexion tcp est active et encoure de communication
wc -l : compte les nbr de ligne 

--------> # NOMBERS D'UTILISATEURE CONNECTEES
COMMAND :ulog=$(who | awk '{print $1}' | sort -u | wc -l)
EXPLICATION:
who : Affiche les utilisateurs connectés avec des détails comme leur nom, leur terminal, leur adresse IP, etc.
awk '{print $1}' :Extrait uniquement le nom des utilisateurs.
sort - u: Trie les noms des utilisateurs et élimine les doublons
wc -l : Compte le nombre total d'utilisateurs uniques.




--------> # @ IP ET MAC
COMMANDE :
1)ip=$(hostname -I)
2 )mac=$(ip link | grep "link/ether" | awk '{print $2}')
EXPLICATION :
1)ip=$(hostname -I)
hostname : engenerale cete commande utliser pour aficher le lenom de hot 
-I : permet de afficher @IP associer au le système
2 )mac=$(ip link | grep "link/ether" | awk '{print $2}')
ip link : aficher des info sur interface reseaux de ton system , inclut les info sur interface VIRTUAL et PHYSICAL
grep "link/ether" : link/ether corespond @MAC de cette de interface reseaux et chaque interface contient une @MAC unique
awk '{print $2}' : pour afficher le colone tani li contient @MAC





















